services:
  web:
    build: .
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - vote-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DJANGO_SETTINGS_MODULE=bpjvote.settings_production
      - SECRET_KEY=$ejr(8#&9!(fay#1#$k^0*^j*aq0qf33)3rr7e!8sbs(5&x2ou
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=vote
      - DB_USER=vote_admin
      - DB_PASSWORD=ahflsdjhlq2038ch+$^das
      - DB_HOST=db
      - DB_PORT=5432                     # container-side port (keep standard)
      - CACHE_BACKEND=django_redis.cache.RedisCache
      - CACHE_LOCATION=redis://:ahsljkdff203849@#$safhjkld@cache:6379/0
      - CACHE_HOST=cache
      - NOVOTE_START_HOUR=17
      - NOVOTE_END_HOUR=9
      - FORCE_TIME=True
      - VOTING_ENABLED=True
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=bpj@srbiau.ac.ir
      - EMAIL_HOST_PASSWORD=BpjEmail@2024
      - ALLOWED_HOSTS=localhost
      - CSRF_TRUSTED_ORIGINS=localhost

  db:
    image: postgres:15.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=vote
      - POSTGRES_USER=vote_admin
      - POSTGRES_PASSWORD=ahflsdjhlq2038ch+$^das
    ports:
      - "5433:5432"                     # host:container — use free host port
    networks:
      - vote-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vote_admin -d vote"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  cache:
    image: valkey/valkey:latest
    command: valkey-server --requirepass ahsljkdff203849@#$safhjkld
    ports:
      - "6378:6379"                     # host:container — avoid conflict
    networks:
      - vote-network
    environment:
      - VALKEY_PASSWORD=ahsljkdff203849@#$safhjkld

volumes:
  postgres_data:

networks:
  vote-network:
    driver: bridge
